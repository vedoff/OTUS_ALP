## Распаковываем архивы конфигов в рабочую папку openvpn
- name: Unarchive easy-rsa.tar.gz file to "vpnserver"
  unarchive:
      src: easy-rsa.tar.gz
      dest: /etc/openvpn/
  when: 
    - ansible_hostname == "vpnserver"
### ------------------------------------------------
- name: Unarchive server.tar.gz file to "vpnserver"
  unarchive:
      src: server.tar.gz
      dest: /etc/openvpn/
  when: 
    - ansible_hostname == "vpnserver"
### ------------------------------------------------
- name: Unarchive client.tar.gz file to "vpnserver"
  unarchive:
      src: client.tar.gz
      dest: /etc/openvpn/
  when: 
    - ansible_hostname == "vpnserver"

## Создать каталог ccd
- name: Create folder ccd
  file:
    path: /etc/openvpn/ccd
    state: directory
    owner: root
    group: root
    mode: 0664
  when: 
    - ansible_hostname == "vpnserver" 

    ## Создать каталог /var/log/openvpn
- name: Create folder /var/log/openvpn
  file:
    path: /var/log/openvpn
    state: directory
    owner: root
    group: root
    mode: 0664
  when: 
    - ansible_hostname == "vpnserver" 

## Разрешаем пересылку пакетов междуинтерфейсами
- name: set up forward packages across routers
  sysctl:
    name: net.ipv4.ip_forward
    value: '1'
    state: present
  when:
    - ansible_hostname == "vpnserver"

## Запускаем сервер openvpn
- name: Enable service openvpn-server@server
  systemd:
    name: openvpn-server@server
    state: started
    enabled: yes
  when:
    - ansible_hostname == "vpnserver"

    ## Конфигурируем сервер
- name: copy file server.conf to openvpn-server
  template:
    src: server.conf.j2
    dest: /etc/openvpn/server/server.conf
  notify:
    - restart openvpn_server
  when: 
    - ansible_hostname == "vpnserver"